//
// Copyright (C) 2025 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/////////////////////////////////////////////////////////////
//
// Audio Policy Configuration files
//
//////////////////////////////////////////////////////////////

prebuilt_etc {
    name: "audio_policy_configuration.xml",
    vendor: true,
    src: ":audio_policy_configuration_top_file",
    required: [
        "audio_policy_volumes.xml",
        "bluetooth_audio_policy_configuration_7_0.xml",
        "default_volume_tables.xml",
        "primary_audio_policy_configuration.xml",
        "r_submix_audio_policy_configuration.xml",
        "surround_sound_configuration_5_0.xml",
    ],
}

filegroup {
    name: "primary_audio_policy_configuration",
    srcs: [
        "primary_audio_policy_configuration.xml",
    ],
}

prebuilt_etc {
    name: "primary_audio_policy_configuration.xml",
    src: ":primary_audio_policy_configuration",
    vendor: true,
}

prebuilt_etc {
    name: "r_submix_audio_policy_configuration.xml",
    vendor: true,
    src: ":r_submix_audio_policy_configuration",
}

prebuilt_etc {
    name: "audio_policy_volumes.xml",
    vendor: true,
    src: ":audio_policy_volumes",
}

prebuilt_etc {
    name: "default_volume_tables.xml",
    vendor: true,
    src: ":default_volume_tables",
}

prebuilt_etc {
    name: "surround_sound_configuration_5_0.xml",
    vendor: true,
    src: ":surround_sound_configuration_5_0",
}

prebuilt_etc {
    name: "bluetooth_audio_policy_configuration_7_0.xml",
    vendor: true,
    src: ":bluetooth_audio_policy_configuration_7_0",
}

//////////////////////////////////////////////////////////////
//
// Audio Policy Engine Configuration files
//
//////////////////////////////////////////////////////////////

//
// Generate audio_policy_engine criterion type file => provides device addresses criterion type
//
filegroup {
    name: "audio_policy_configuration_files",
    srcs: [
        ":audio_policy_volumes",
        ":bluetooth_audio_policy_configuration_7_0",
        ":default_volume_tables",
        ":primary_audio_policy_configuration",
        ":r_submix_audio_policy_configuration",
        ":surround_sound_configuration_5_0",
    ],
}

filegroup {
    name: "audio_policy_configuration_top_file",
    srcs: ["audio_policy_configuration.xml"],
}

genrule {
    name: "audio_policy_engine_criterion_types",
    defaults: ["capbuildpolicycriteriontypesrule"],
    srcs: [
        ":audio_policy_configuration_files",
        ":audio_policy_configuration_top_file",
    ],
}

prebuilt_etc {
    name: "audio_policy_engine_criterion_types.xml",
    vendor: true,
    src: ":audio_policy_engine_criterion_types",
}

filegroup {
    name: "audio_policy_engine_configuration",
    srcs: [
        "engine/config/audio_policy_engine_configuration.xml",
    ],
}

filegroup {
    name: "audio_policy_engine_configuration_files",
    srcs: [
        ":audio_policy_engine_configuration",
        ":audio_policy_engine_criteria",
        ":audio_policy_engine_criterion_types",
        "engine/config/audio_policy_engine_default_volumes.xml",
        "engine/config/audio_policy_engine_product_strategies.xml",
        "engine/config/audio_policy_engine_volumes.xml",
    ],
}

prebuilt_etc {
    name: "audio_policy_engine_configuration.xml",
    vendor: true,
    src: ":audio_policy_engine_configuration",
    required: [
        "audio_policy_engine_criteria.xml",
        "audio_policy_engine_criterion_types.xml",
        "audio_policy_engine_default_volumes.xml",
        "audio_policy_engine_product_strategies.xml",
        "audio_policy_engine_volumes.xml",
        "parameter-framework.policy",
    ],
}

prebuilt_etc {
    name: "audio_policy_engine_product_strategies.xml",
    vendor: true,
    src: "engine/config/audio_policy_engine_product_strategies.xml",
}

prebuilt_etc {
    name: "audio_policy_engine_volumes.xml",
    vendor: true,
    src: "engine/config/audio_policy_engine_volumes.xml",
}

prebuilt_etc {
    name: "audio_policy_engine_default_volumes.xml",
    vendor: true,
    src: "engine/config/audio_policy_engine_default_volumes.xml",
}

//////////////////////////////////////////////////////////////
//
// Audio Policy Parameter Framework
//
//////////////////////////////////////////////////////////////

//
// Generate Audio Policy Parameter Framework Configurable Domains
//
filegroup {
    name: "edd_files",
    srcs: [
        "engine/parameter-framework/Settings/device_for_input_source.pfw",
        "engine/parameter-framework/Settings/device_for_product_strategies.pfw",
        "engine/parameter-framework/Settings/volumes.pfw",
    ],
}

// This is for Settings generation, must use socket port, so userdebug version is required
filegroup {
    name: "audio_policy_pfw_toplevel",
    srcs: [":ParameterFrameworkConfigurationCapSrc"],
}

filegroup {
    name: "audio_policy_pfw_structure_files",
    srcs: [
        ":CapClass",
        ":CapSubsystem",
        ":buildaidlcommontypesstructure_gen",
        ":cap_product_strategies_structure",
    ],
}

genrule {
    name: "domaingeneratorpolicyrule_gen",
    defaults: ["domaingeneratorpolicyrule"],
    srcs: [
        ":audio_policy_engine_criterion_types",
        ":audio_policy_pfw_structure_files",
        ":audio_policy_pfw_toplevel",
        ":edd_files",
    ],
}

prebuilt_etc {
    name: "parameter-framework.policy",
    filename_from_src: true,
    vendor: true,
    src: ":domaingeneratorpolicyrule_gen",
    sub_dir: "parameter-framework/Settings/Policy",
}
